/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.datascience9.doc.gui;

import com.datascience9.doc.ConfigurationHelper;
import com.datascience9.doc.MainClass;
import com.datascience9.doc.util.LoggingUtil;
import java.io.File;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.LinkOption;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.LogRecord;
import java.util.logging.Logger;
import java.util.logging.StreamHandler;
import java.util.stream.Collectors;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTextArea;
import javax.swing.JTextField;

/**
 *
 * @author paul
 */
public class MainJFrame extends javax.swing.JFrame {
  private Logger logger = null;
  /**
   * Creates new form NewJFrame
   */
  public MainJFrame() {
    initComponents();
  }

  /**
   * This method is called from within the constructor to initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is always
   * regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    lblTitle = new javax.swing.JLabel();
    lblInputDir = new javax.swing.JLabel();
    txtInputDir = new javax.swing.JTextField();
    btnInputDir = new javax.swing.JButton();
    lblOutputDir = new javax.swing.JLabel();
    txtOutputDir = new javax.swing.JTextField();
    btnOutputDir = new javax.swing.JButton();
    btnPreprocess = new javax.swing.JButton();
    btnAnalyze = new javax.swing.JButton();
    btnMeta = new javax.swing.JButton();
    btnTransform = new javax.swing.JButton();
    btnPDF = new javax.swing.JButton();
    jScrollPane1 = new javax.swing.JScrollPane();
    areaLog = new javax.swing.JTextArea();
    btnClose = new javax.swing.JButton();

    setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
    addWindowListener(new java.awt.event.WindowAdapter() {
      public void windowOpened(java.awt.event.WindowEvent evt) {
        formWindowOpened(evt);
      }
    });

    lblTitle.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
    lblTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
    lblTitle.setText("Document Conversion");

    lblInputDir.setText("Input Directory");

    txtInputDir.setText(ConfigurationHelper.getInputDir());
    txtInputDir.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        txtInputDirActionPerformed(evt);
      }
    });

    btnInputDir.setText("Select Input Dir");
    btnInputDir.setToolTipText("Select input directory");
    btnInputDir.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        btnInputDirActionPerformed(evt);
      }
    });

    lblOutputDir.setText("Output Directory");

    txtOutputDir.setText("Output Directory");

    btnOutputDir.setText("Select Output Dir");
    btnOutputDir.setToolTipText("Select Output Directory");
    btnOutputDir.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        btnOutputDirActionPerformed(evt);
      }
    });

    btnPreprocess.setText("Pre process");
    btnPreprocess.setToolTipText("Extract Word Document to Html");
    btnPreprocess.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        btnPreprocessActionPerformed(evt);
      }
    });

    btnAnalyze.setText("Analyze");
    btnAnalyze.setToolTipText("Identify document types");
    btnAnalyze.setEnabled(false);
    btnAnalyze.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        btnAnalyzeActionPerformed(evt);
      }
    });

    btnMeta.setText("Analyze Metadata");
    btnMeta.setToolTipText("Extract document metadata");
    btnMeta.setEnabled(false);
    btnMeta.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        btnMetaActionPerformed(evt);
      }
    });

    btnTransform.setText("Transform to XML");
    btnTransform.setToolTipText("Transform text to XML");
    btnTransform.setEnabled(false);
    btnTransform.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        btnTransformActionPerformed(evt);
      }
    });

    btnPDF.setText("Generate PDF");
    btnPDF.setToolTipText("Generate PDF from XML");
    btnPDF.setEnabled(false);
    btnPDF.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        btnPDFActionPerformed(evt);
      }
    });

    areaLog.setColumns(20);
    areaLog.setRows(5);
    jScrollPane1.setViewportView(areaLog);

    btnClose.setText("Close");
    btnClose.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        btnCloseActionPerformed(evt);
      }
    });

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addContainerGap()
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addGroup(layout.createSequentialGroup()
            .addComponent(jScrollPane1)
            .addContainerGap())
          .addGroup(layout.createSequentialGroup()
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
              .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                .addGroup(layout.createSequentialGroup()
                  .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblInputDir, javax.swing.GroupLayout.DEFAULT_SIZE, 94, Short.MAX_VALUE)
                    .addComponent(lblOutputDir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                  .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                  .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtOutputDir, javax.swing.GroupLayout.PREFERRED_SIZE, 512, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtInputDir, javax.swing.GroupLayout.PREFERRED_SIZE, 512, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(layout.createSequentialGroup()
                  .addComponent(btnPreprocess)
                  .addGap(18, 18, 18)
                  .addComponent(btnAnalyze)
                  .addGap(18, 18, 18)
                  .addComponent(btnMeta)
                  .addGap(18, 18, 18)
                  .addComponent(btnTransform)
                  .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                  .addComponent(btnPDF)))
              .addGroup(layout.createSequentialGroup()
                .addGap(119, 119, 119)
                .addComponent(lblTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 489, javax.swing.GroupLayout.PREFERRED_SIZE)))
            .addGap(18, 18, 18)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
              .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                  .addComponent(btnOutputDir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                  .addComponent(btnInputDir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
              .addComponent(btnClose, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGap(41, 41, 41))))
    );
    layout.setVerticalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addComponent(lblTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(lblInputDir)
          .addComponent(txtInputDir, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(btnInputDir))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(lblOutputDir)
          .addComponent(txtOutputDir, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(btnOutputDir))
        .addGap(18, 18, 18)
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(btnPreprocess)
          .addComponent(btnAnalyze)
          .addComponent(btnMeta)
          .addComponent(btnTransform)
          .addComponent(btnPDF)
          .addComponent(btnClose))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 193, Short.MAX_VALUE)
        .addContainerGap())
    );

    pack();
  }// </editor-fold>//GEN-END:initComponents


  private void btnInputDirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInputDirActionPerformed
    openJFileChooser(evt, txtInputDir);
    if (txtInputDir.getText() != null) ConfigurationHelper.updateInputDir(txtInputDir.getText());
  }//GEN-LAST:event_btnInputDirActionPerformed

  private void btnOutputDirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOutputDirActionPerformed
    openJFileChooser(evt, txtOutputDir);
    if (txtOutputDir.getText() != null) ConfigurationHelper.updateOutputDir(txtOutputDir.getText());
  }//GEN-LAST:event_btnOutputDirActionPerformed

  private void btnCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCloseActionPerformed
    setVisible(false); //you can't see me!
    dispose(); //Destroy the JFrame object
  }//GEN-LAST:event_btnCloseActionPerformed

  private void btnPreprocessActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPreprocessActionPerformed
    Path inputDir = Paths.get(ConfigurationHelper.getInputDir());
    if (!Files.isDirectory(inputDir, LinkOption.NOFOLLOW_LINKS)) {
      JOptionPane.showMessageDialog(null, "The invalid  dir!! please add Word documents into the input dir", "Warning", JOptionPane.INFORMATION_MESSAGE);
      return;
    }
    
    try {
      List<Path> paths = Files.list(inputDir).
              filter(path -> path.toFile().getName().endsWith(".doc"))
              .collect(Collectors.toList());
      if (paths.isEmpty()) {
        JOptionPane.showMessageDialog(null, "The input directory is empty!! please add Word documents into the input dir", "Warning", JOptionPane.INFORMATION_MESSAGE);
        return;
      }
    } catch (IOException ex) {
      this.getLogger().log(Level.SEVERE, null, ex);
    }
   
    //check output dir
    Path outputDir = Paths.get(ConfigurationHelper.getOutputDir());
    if (!Files.isDirectory(outputDir, LinkOption.NOFOLLOW_LINKS)) {
      JOptionPane.showMessageDialog(null, "The invalid output directory!! " + outputDir + " please update the output directory", "Warning", JOptionPane.INFORMATION_MESSAGE);
      return;
    }
    
    MainClass.extractDoc2Html(Paths.get(ConfigurationHelper.getInputDir()), Paths.get(ConfigurationHelper.getOutputDir()), getLogger());
    btnAnalyze.setEnabled(true);
    this.getLogger().info("the pre-processing phase is complete.  Please view the output folder");
  }//GEN-LAST:event_btnPreprocessActionPerformed

  private void btnAnalyzeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAnalyzeActionPerformed
    MainClass.analyze(Paths.get(ConfigurationHelper.getInputDir()), Paths.get(ConfigurationHelper.getOutputDir()), getLogger());
    btnMeta.setEnabled(true);
    this.getLogger().info("the Analysis phase is complete.  Please view the output folder");
  }//GEN-LAST:event_btnAnalyzeActionPerformed

  private void btnMetaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMetaActionPerformed
    MainClass.analyzeMeta(Paths.get(ConfigurationHelper.getInputDir()), Paths.get(ConfigurationHelper.getOutputDir()), getLogger());
    btnTransform.setEnabled(true);
    getLogger().info("the Meta Analysis phase is complete.  Please view the output folder");
  }//GEN-LAST:event_btnMetaActionPerformed

  private void btnTransformActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTransformActionPerformed
    MainClass.transform2XML(Paths.get(ConfigurationHelper.getInputDir()), Paths.get(ConfigurationHelper.getOutputDir()), getLogger());
    btnPDF.setEnabled(true);
    getLogger().info("The transforamtion to XML phase is complete.  Please view the output folder");
  }//GEN-LAST:event_btnTransformActionPerformed

  private void btnPDFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPDFActionPerformed
    MainClass.generatePDF(Paths.get(ConfigurationHelper.getInputDir()), Paths.get(ConfigurationHelper.getOutputDir()), getLogger());
    getLogger().info("The PDF generation phase is complete.  Please view the output folder");
  }//GEN-LAST:event_btnPDFActionPerformed

  private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
    txtInputDir.setText(ConfigurationHelper.getInputDir());
    txtOutputDir.setText(ConfigurationHelper.getOutputDir());
  }//GEN-LAST:event_formWindowOpened

  private Logger getLogger() {
    if (null == logger) {
      TextAreaHandler textAreaHandler = new TextAreaHandler();
      textAreaHandler.setTextArea(this.areaLog);
      this.logger = Logger.getLogger(this.getName());
      this.logger.addHandler(textAreaHandler);
    }
    return this.logger;
  }
  
  private void txtInputDirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtInputDirActionPerformed
    // TODO add your handling code here:
  }//GEN-LAST:event_txtInputDirActionPerformed

  private void openJFileChooser(java.awt.event.ActionEvent evt, JTextField txtField) {
    final JFileChooser fc = new JFileChooser();
    fc.setCurrentDirectory(new java.io.File("."));
    fc.setDialogTitle("Select Directory");
    fc.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
      int returnVal = fc.showOpenDialog(this);

    if (returnVal == JFileChooser.APPROVE_OPTION) {
        File dir = fc.getSelectedFile();
        //This is where a real application would open the file.
        txtField.setText(dir.getAbsolutePath());
        this.areaLog.append("Opening: " + dir.getName() + ".\n");
    } 
  }
  
  public class TextAreaHandler extends StreamHandler {
    JTextArea textArea = null;

    public void setTextArea(JTextArea textArea) {
        this.textArea = textArea;
    }

    @Override
    public void publish(LogRecord record) {
        super.publish(record);
        flush();

        if (textArea != null) {
            textArea.append(getFormatter().format(record));
        }
    }
}
  
  /**
   * @param args the command line arguments
   */
  public static void main(String args[]) {
    /* Set the Nimbus look and feel */
    //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
    /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
     */
    try {
      for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
        if ("Nimbus".equals(info.getName())) {
          javax.swing.UIManager.setLookAndFeel(info.getClassName());
          break;
        }
      }
    } catch (ClassNotFoundException ex) {
      java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (InstantiationException ex) {
      java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (IllegalAccessException ex) {
      java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (javax.swing.UnsupportedLookAndFeelException ex) {
      java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    }
    //</editor-fold>
    //</editor-fold>

    /* Create and display the form */
    java.awt.EventQueue.invokeLater(new Runnable() {
      public void run() {
        new MainJFrame().setVisible(true);
      }
    });
  }
  
  public static void launch() {
    /* Set the Nimbus look and feel */
    //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
    /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
     */
    try {
      for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
        if ("Nimbus".equals(info.getName())) {
          javax.swing.UIManager.setLookAndFeel(info.getClassName());
          break;
        }
      }
    } catch (ClassNotFoundException ex) {
      java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (InstantiationException ex) {
      java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (IllegalAccessException ex) {
      java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (javax.swing.UnsupportedLookAndFeelException ex) {
      java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    }
    //</editor-fold>
    //</editor-fold>

    /* Create and display the form */
    java.awt.EventQueue.invokeLater(new Runnable() {
      public void run() {
        new MainJFrame().setVisible(true);
      }
    });
  }

  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JTextArea areaLog;
  private javax.swing.JButton btnAnalyze;
  private javax.swing.JButton btnClose;
  private javax.swing.JButton btnInputDir;
  private javax.swing.JButton btnMeta;
  private javax.swing.JButton btnOutputDir;
  private javax.swing.JButton btnPDF;
  private javax.swing.JButton btnPreprocess;
  private javax.swing.JButton btnTransform;
  private javax.swing.JScrollPane jScrollPane1;
  private javax.swing.JLabel lblInputDir;
  private javax.swing.JLabel lblOutputDir;
  private javax.swing.JLabel lblTitle;
  private javax.swing.JTextField txtInputDir;
  private javax.swing.JTextField txtOutputDir;
  // End of variables declaration//GEN-END:variables
}
